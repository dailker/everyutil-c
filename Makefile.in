srcdir=@srcdir@
VPATH=$(srcdir):bin

prefix=@prefix@

EXEEXT=@EXEEXT@

CC=@CC@
DEFS=@DEFS@
DEFAULT_INCLUDES=-I@srcdir@/include
INCLUDES=$(notdir null/)
CPPFLAGS=@CPPFLAGS@
CFLAGS=@CFLAGS@ -fPIC -DEVERYUTIL_BUILD -Wall -O2 $(shell find $(srcdir)/include -type d -exec echo -I{} \;)
LDFLAGS=@LDFLAGS@
AR=@AR@
ARFLAGS=r
OBJEXT=@OBJEXT@
SOURCES=@SOURCES@
OBJECTS=$(patsubst $(srcdir)/src/%.c, obj/%.$(OBJEXT), $(SOURCES))
TEST_OBJECTS=$(patsubst $(srcdir)/tests/%.c, obj/tests/%.test.$(OBJEXT), $(TEST_SOURCES))
INCLUDE_DIRECTORIES=@INCLUDE_DIRECTORIES@
INCLUDE_FILES=@INCLUDE_FILES@

# New variables for enhanced functionality
LIB_NAME = everyutil
TEST_SOURCES = $(shell find $(srcdir)/tests -name '*.c')
TEST_EXECUTABLES = $(patsubst $(srcdir)/tests/%.c, testbin/%$(EXEEXT), $(TEST_SOURCES))
TEST_EXEC_DIR = testbin

# Platform-specific library names
ifeq ($(OS),Windows_NT)
    LIB_SHARED = lib/lib$(LIB_NAME).dll
    LIB_IMPORT = lib/lib$(LIB_NAME).lib
else
    LIB_SHARED = lib/lib$(LIB_NAME).so
endif

.PHONY: all clean test static shared install

all: compile_objects compile_library compile_include shared test

compile_objects: obj $(OBJECTS)

obj/%.$(OBJEXT): $(srcdir)/src/%.c
	@mkdir -p $(@D)
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) -c $< -o $@

obj:
	mkdir -p obj

compile_library: lib lib/lib$(LIB_NAME).a

lib/lib$(LIB_NAME).a: $(OBJECTS)
	$(AR) $(ARFLAGS) $@ $?

lib:
	mkdir -p lib

compile_include: $(addprefix $(CURDIR)/, $(INCLUDE_DIRECTORIES)) $(addprefix $(CURDIR)/, $(INCLUDE_FILES))

$(addprefix $(CURDIR)/, $(INCLUDE_DIRECTORIES)):
	mkdir -p $@

$(addprefix $(CURDIR)/, $(INCLUDE_FILES)): $(CURDIR)/%: %
	cp -R $< $(@:$(CURDIR)/%=%)

# Shared library target
shared: $(LIB_SHARED)

$(LIB_SHARED): $(OBJECTS)
ifeq ($(OS),Windows_NT)
	$(CC) -shared -o $@ $^ $(LDFLAGS) -Wl,--out-implib,$(LIB_IMPORT)
else
	$(CC) -shared -o $@ $^ $(LDFLAGS)
endif

# Test compilation targets
obj/tests/%.test.$(OBJEXT): $(srcdir)/tests/%.c
	@mkdir -p $(@D)
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) -c $< -o $@

$(TEST_EXEC_DIR)/%$(EXEEXT): obj/tests/%.test.$(OBJEXT) lib/lib$(LIB_NAME).a
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) $< lib/lib$(LIB_NAME).a -o $@ $(LDFLAGS)

test: $(TEST_EXECUTABLES)
	@for test in $(TEST_EXECUTABLES); do \
		echo "Running $$test"; \
		./$$test || exit 1; \
	done

install:
	cp -R lib/* $(prefix)/lib
	cp -R include/* $(prefix)/include

clean:
	rm -rf obj lib $(TEST_EXEC_DIR)